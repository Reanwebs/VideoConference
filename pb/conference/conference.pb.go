// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: conference.proto

package conference

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ScheduleConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Type             string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Title            string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Interest         string `protobuf:"bytes,5,opt,name=interest,proto3" json:"interest,omitempty"`
	Recording        bool   `protobuf:"varint,6,opt,name=recording,proto3" json:"recording,omitempty"`
	Chat             bool   `protobuf:"varint,7,opt,name=chat,proto3" json:"chat,omitempty"`
	Broadcast        bool   `protobuf:"varint,8,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Participantlimit int32  `protobuf:"varint,9,opt,name=participantlimit,proto3" json:"participantlimit,omitempty"`
	Date             string `protobuf:"bytes,10,opt,name=date,proto3" json:"date,omitempty"`
	TimeSeconds      int64  `protobuf:"varint,11,opt,name=time_seconds,json=timeSeconds,proto3" json:"time_seconds,omitempty"`
	TimeNanos        int32  `protobuf:"varint,12,opt,name=time_nanos,json=timeNanos,proto3" json:"time_nanos,omitempty"`
}

func (x *ScheduleConferenceRequest) Reset() {
	*x = ScheduleConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleConferenceRequest) ProtoMessage() {}

func (x *ScheduleConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleConferenceRequest.ProtoReflect.Descriptor instead.
func (*ScheduleConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduleConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ScheduleConferenceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ScheduleConferenceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ScheduleConferenceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScheduleConferenceRequest) GetInterest() string {
	if x != nil {
		return x.Interest
	}
	return ""
}

func (x *ScheduleConferenceRequest) GetRecording() bool {
	if x != nil {
		return x.Recording
	}
	return false
}

func (x *ScheduleConferenceRequest) GetChat() bool {
	if x != nil {
		return x.Chat
	}
	return false
}

func (x *ScheduleConferenceRequest) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *ScheduleConferenceRequest) GetParticipantlimit() int32 {
	if x != nil {
		return x.Participantlimit
	}
	return 0
}

func (x *ScheduleConferenceRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ScheduleConferenceRequest) GetTimeSeconds() int64 {
	if x != nil {
		return x.TimeSeconds
	}
	return 0
}

func (x *ScheduleConferenceRequest) GetTimeNanos() int32 {
	if x != nil {
		return x.TimeNanos
	}
	return 0
}

type ScheduleConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=ConferenceID,proto3" json:"ConferenceID,omitempty"`
}

func (x *ScheduleConferenceResponse) Reset() {
	*x = ScheduleConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleConferenceResponse) ProtoMessage() {}

func (x *ScheduleConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleConferenceResponse.ProtoReflect.Descriptor instead.
func (*ScheduleConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{3}
}

func (x *ScheduleConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ScheduleConferenceResponse) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type StartPrivateConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Title            string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Interest         string `protobuf:"bytes,5,opt,name=interest,proto3" json:"interest,omitempty"`
	Recording        bool   `protobuf:"varint,6,opt,name=recording,proto3" json:"recording,omitempty"`
	Chat             bool   `protobuf:"varint,7,opt,name=chat,proto3" json:"chat,omitempty"`
	Broadcast        bool   `protobuf:"varint,8,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Participantlimit int32  `protobuf:"varint,9,opt,name=participantlimit,proto3" json:"participantlimit,omitempty"`
}

func (x *StartPrivateConferenceRequest) Reset() {
	*x = StartPrivateConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPrivateConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPrivateConferenceRequest) ProtoMessage() {}

func (x *StartPrivateConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPrivateConferenceRequest.ProtoReflect.Descriptor instead.
func (*StartPrivateConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{4}
}

func (x *StartPrivateConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *StartPrivateConferenceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StartPrivateConferenceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StartPrivateConferenceRequest) GetInterest() string {
	if x != nil {
		return x.Interest
	}
	return ""
}

func (x *StartPrivateConferenceRequest) GetRecording() bool {
	if x != nil {
		return x.Recording
	}
	return false
}

func (x *StartPrivateConferenceRequest) GetChat() bool {
	if x != nil {
		return x.Chat
	}
	return false
}

func (x *StartPrivateConferenceRequest) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *StartPrivateConferenceRequest) GetParticipantlimit() int32 {
	if x != nil {
		return x.Participantlimit
	}
	return 0
}

type StartPrivateConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *StartPrivateConferenceResponse) Reset() {
	*x = StartPrivateConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPrivateConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPrivateConferenceResponse) ProtoMessage() {}

func (x *StartPrivateConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPrivateConferenceResponse.ProtoReflect.Descriptor instead.
func (*StartPrivateConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{5}
}

func (x *StartPrivateConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StartPrivateConferenceResponse) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type StartGroupConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	GroupID          string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Title            string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Interest         string `protobuf:"bytes,5,opt,name=interest,proto3" json:"interest,omitempty"`
	Recording        bool   `protobuf:"varint,6,opt,name=recording,proto3" json:"recording,omitempty"`
	Chat             bool   `protobuf:"varint,7,opt,name=chat,proto3" json:"chat,omitempty"`
	Broadcast        bool   `protobuf:"varint,8,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Participantlimit int32  `protobuf:"varint,9,opt,name=participantlimit,proto3" json:"participantlimit,omitempty"`
}

func (x *StartGroupConferenceRequest) Reset() {
	*x = StartGroupConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGroupConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGroupConferenceRequest) ProtoMessage() {}

func (x *StartGroupConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGroupConferenceRequest.ProtoReflect.Descriptor instead.
func (*StartGroupConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{6}
}

func (x *StartGroupConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *StartGroupConferenceRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *StartGroupConferenceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StartGroupConferenceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StartGroupConferenceRequest) GetInterest() string {
	if x != nil {
		return x.Interest
	}
	return ""
}

func (x *StartGroupConferenceRequest) GetRecording() bool {
	if x != nil {
		return x.Recording
	}
	return false
}

func (x *StartGroupConferenceRequest) GetChat() bool {
	if x != nil {
		return x.Chat
	}
	return false
}

func (x *StartGroupConferenceRequest) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *StartGroupConferenceRequest) GetParticipantlimit() int32 {
	if x != nil {
		return x.Participantlimit
	}
	return 0
}

type StartGroupConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=ConferenceID,proto3" json:"ConferenceID,omitempty"`
}

func (x *StartGroupConferenceResponse) Reset() {
	*x = StartGroupConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGroupConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGroupConferenceResponse) ProtoMessage() {}

func (x *StartGroupConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGroupConferenceResponse.ProtoReflect.Descriptor instead.
func (*StartGroupConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{7}
}

func (x *StartGroupConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StartGroupConferenceResponse) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type StartPublicConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Title            string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Interest         string `protobuf:"bytes,5,opt,name=interest,proto3" json:"interest,omitempty"`
	JoinType         string `protobuf:"bytes,6,opt,name=joinType,proto3" json:"joinType,omitempty"`
	Recording        bool   `protobuf:"varint,7,opt,name=recording,proto3" json:"recording,omitempty"`
	Chat             bool   `protobuf:"varint,8,opt,name=chat,proto3" json:"chat,omitempty"`
	Broadcast        bool   `protobuf:"varint,9,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Participantlimit int32  `protobuf:"varint,10,opt,name=participantlimit,proto3" json:"participantlimit,omitempty"`
}

func (x *StartPublicConferenceRequest) Reset() {
	*x = StartPublicConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPublicConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPublicConferenceRequest) ProtoMessage() {}

func (x *StartPublicConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPublicConferenceRequest.ProtoReflect.Descriptor instead.
func (*StartPublicConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{8}
}

func (x *StartPublicConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *StartPublicConferenceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StartPublicConferenceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StartPublicConferenceRequest) GetInterest() string {
	if x != nil {
		return x.Interest
	}
	return ""
}

func (x *StartPublicConferenceRequest) GetJoinType() string {
	if x != nil {
		return x.JoinType
	}
	return ""
}

func (x *StartPublicConferenceRequest) GetRecording() bool {
	if x != nil {
		return x.Recording
	}
	return false
}

func (x *StartPublicConferenceRequest) GetChat() bool {
	if x != nil {
		return x.Chat
	}
	return false
}

func (x *StartPublicConferenceRequest) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *StartPublicConferenceRequest) GetParticipantlimit() int32 {
	if x != nil {
		return x.Participantlimit
	}
	return 0
}

type StartPublicConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=ConferenceID,proto3" json:"ConferenceID,omitempty"`
}

func (x *StartPublicConferenceResponse) Reset() {
	*x = StartPublicConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPublicConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPublicConferenceResponse) ProtoMessage() {}

func (x *StartPublicConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPublicConferenceResponse.ProtoReflect.Descriptor instead.
func (*StartPublicConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{9}
}

func (x *StartPublicConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StartPublicConferenceResponse) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type JoinPrivateConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *JoinPrivateConferenceRequest) Reset() {
	*x = JoinPrivateConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPrivateConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPrivateConferenceRequest) ProtoMessage() {}

func (x *JoinPrivateConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPrivateConferenceRequest.ProtoReflect.Descriptor instead.
func (*JoinPrivateConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{10}
}

func (x *JoinPrivateConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *JoinPrivateConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type JoinPrivateConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *JoinPrivateConferenceResponse) Reset() {
	*x = JoinPrivateConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPrivateConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPrivateConferenceResponse) ProtoMessage() {}

func (x *JoinPrivateConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPrivateConferenceResponse.ProtoReflect.Descriptor instead.
func (*JoinPrivateConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{11}
}

func (x *JoinPrivateConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type JoinGroupConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	GroupID      string `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	ConferenceID string `protobuf:"bytes,3,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *JoinGroupConferenceRequest) Reset() {
	*x = JoinGroupConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupConferenceRequest) ProtoMessage() {}

func (x *JoinGroupConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupConferenceRequest.ProtoReflect.Descriptor instead.
func (*JoinGroupConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{12}
}

func (x *JoinGroupConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *JoinGroupConferenceRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *JoinGroupConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type JoinGroupConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *JoinGroupConferenceResponse) Reset() {
	*x = JoinGroupConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupConferenceResponse) ProtoMessage() {}

func (x *JoinGroupConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupConferenceResponse.ProtoReflect.Descriptor instead.
func (*JoinGroupConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{13}
}

func (x *JoinGroupConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type JoinPublicConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *JoinPublicConferenceRequest) Reset() {
	*x = JoinPublicConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPublicConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPublicConferenceRequest) ProtoMessage() {}

func (x *JoinPublicConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPublicConferenceRequest.ProtoReflect.Descriptor instead.
func (*JoinPublicConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{14}
}

func (x *JoinPublicConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *JoinPublicConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type JoinPublicConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *JoinPublicConferenceResponse) Reset() {
	*x = JoinPublicConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPublicConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPublicConferenceResponse) ProtoMessage() {}

func (x *JoinPublicConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPublicConferenceResponse.ProtoReflect.Descriptor instead.
func (*JoinPublicConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{15}
}

func (x *JoinPublicConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type AcceptJoiningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	HostID       string `protobuf:"bytes,2,opt,name=hostID,proto3" json:"hostID,omitempty"`
	ConferenceID string `protobuf:"bytes,3,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *AcceptJoiningRequest) Reset() {
	*x = AcceptJoiningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptJoiningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptJoiningRequest) ProtoMessage() {}

func (x *AcceptJoiningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptJoiningRequest.ProtoReflect.Descriptor instead.
func (*AcceptJoiningRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{16}
}

func (x *AcceptJoiningRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AcceptJoiningRequest) GetHostID() string {
	if x != nil {
		return x.HostID
	}
	return ""
}

func (x *AcceptJoiningRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type AcceptJoiningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AcceptJoiningResponse) Reset() {
	*x = AcceptJoiningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptJoiningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptJoiningResponse) ProtoMessage() {}

func (x *AcceptJoiningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptJoiningResponse.ProtoReflect.Descriptor instead.
func (*AcceptJoiningResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{17}
}

func (x *AcceptJoiningResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Decline Joining
type DeclineJoiningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *DeclineJoiningRequest) Reset() {
	*x = DeclineJoiningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineJoiningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineJoiningRequest) ProtoMessage() {}

func (x *DeclineJoiningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineJoiningRequest.ProtoReflect.Descriptor instead.
func (*DeclineJoiningRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{18}
}

func (x *DeclineJoiningRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeclineJoiningRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type DeclineJoiningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeclineJoiningResponse) Reset() {
	*x = DeclineJoiningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineJoiningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineJoiningResponse) ProtoMessage() {}

func (x *DeclineJoiningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineJoiningResponse.ProtoReflect.Descriptor instead.
func (*DeclineJoiningResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{19}
}

func (x *DeclineJoiningResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type RemovePrivateParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	HostID       string `protobuf:"bytes,2,opt,name=hostID,proto3" json:"hostID,omitempty"`
	ConferenceID string `protobuf:"bytes,3,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
	Block        bool   `protobuf:"varint,4,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *RemovePrivateParticipantRequest) Reset() {
	*x = RemovePrivateParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePrivateParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePrivateParticipantRequest) ProtoMessage() {}

func (x *RemovePrivateParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePrivateParticipantRequest.ProtoReflect.Descriptor instead.
func (*RemovePrivateParticipantRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{20}
}

func (x *RemovePrivateParticipantRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RemovePrivateParticipantRequest) GetHostID() string {
	if x != nil {
		return x.HostID
	}
	return ""
}

func (x *RemovePrivateParticipantRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

func (x *RemovePrivateParticipantRequest) GetBlock() bool {
	if x != nil {
		return x.Block
	}
	return false
}

type RemovePrivateParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemovePrivateParticipantResponse) Reset() {
	*x = RemovePrivateParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePrivateParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePrivateParticipantResponse) ProtoMessage() {}

func (x *RemovePrivateParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePrivateParticipantResponse.ProtoReflect.Descriptor instead.
func (*RemovePrivateParticipantResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{21}
}

func (x *RemovePrivateParticipantResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type RemoveGroupParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	HostID       string `protobuf:"bytes,2,opt,name=hostID,proto3" json:"hostID,omitempty"`
	ConferenceID string `protobuf:"bytes,3,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
	Block        bool   `protobuf:"varint,4,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *RemoveGroupParticipantRequest) Reset() {
	*x = RemoveGroupParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupParticipantRequest) ProtoMessage() {}

func (x *RemoveGroupParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupParticipantRequest.ProtoReflect.Descriptor instead.
func (*RemoveGroupParticipantRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveGroupParticipantRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RemoveGroupParticipantRequest) GetHostID() string {
	if x != nil {
		return x.HostID
	}
	return ""
}

func (x *RemoveGroupParticipantRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

func (x *RemoveGroupParticipantRequest) GetBlock() bool {
	if x != nil {
		return x.Block
	}
	return false
}

type RemoveGroupParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemoveGroupParticipantResponse) Reset() {
	*x = RemoveGroupParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupParticipantResponse) ProtoMessage() {}

func (x *RemoveGroupParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupParticipantResponse.ProtoReflect.Descriptor instead.
func (*RemoveGroupParticipantResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveGroupParticipantResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type RemovePublicParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	HostID       string `protobuf:"bytes,2,opt,name=hostID,proto3" json:"hostID,omitempty"`
	ConferenceID string `protobuf:"bytes,3,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
	Block        bool   `protobuf:"varint,4,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *RemovePublicParticipantRequest) Reset() {
	*x = RemovePublicParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePublicParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePublicParticipantRequest) ProtoMessage() {}

func (x *RemovePublicParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePublicParticipantRequest.ProtoReflect.Descriptor instead.
func (*RemovePublicParticipantRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{24}
}

func (x *RemovePublicParticipantRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RemovePublicParticipantRequest) GetHostID() string {
	if x != nil {
		return x.HostID
	}
	return ""
}

func (x *RemovePublicParticipantRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

func (x *RemovePublicParticipantRequest) GetBlock() bool {
	if x != nil {
		return x.Block
	}
	return false
}

type RemovePublicParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RemovePublicParticipantResponse) Reset() {
	*x = RemovePublicParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePublicParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePublicParticipantResponse) ProtoMessage() {}

func (x *RemovePublicParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePublicParticipantResponse.ProtoReflect.Descriptor instead.
func (*RemovePublicParticipantResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{25}
}

func (x *RemovePublicParticipantResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ToggleCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *ToggleCameraRequest) Reset() {
	*x = ToggleCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleCameraRequest) ProtoMessage() {}

func (x *ToggleCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleCameraRequest.ProtoReflect.Descriptor instead.
func (*ToggleCameraRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{26}
}

func (x *ToggleCameraRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ToggleCameraRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type ToggleCameraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ToggleCameraResponse) Reset() {
	*x = ToggleCameraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleCameraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleCameraResponse) ProtoMessage() {}

func (x *ToggleCameraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleCameraResponse.ProtoReflect.Descriptor instead.
func (*ToggleCameraResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{27}
}

func (x *ToggleCameraResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ToggleMicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *ToggleMicRequest) Reset() {
	*x = ToggleMicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleMicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleMicRequest) ProtoMessage() {}

func (x *ToggleMicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleMicRequest.ProtoReflect.Descriptor instead.
func (*ToggleMicRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{28}
}

func (x *ToggleMicRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ToggleMicRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type ToggleMicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ToggleMicResponse) Reset() {
	*x = ToggleMicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleMicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleMicResponse) ProtoMessage() {}

func (x *ToggleMicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleMicResponse.ProtoReflect.Descriptor instead.
func (*ToggleMicResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{29}
}

func (x *ToggleMicResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ToggleParticipantCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *ToggleParticipantCameraRequest) Reset() {
	*x = ToggleParticipantCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleParticipantCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleParticipantCameraRequest) ProtoMessage() {}

func (x *ToggleParticipantCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleParticipantCameraRequest.ProtoReflect.Descriptor instead.
func (*ToggleParticipantCameraRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{30}
}

func (x *ToggleParticipantCameraRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ToggleParticipantCameraRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type ToggleParticipantCameraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ToggleParticipantCameraResponse) Reset() {
	*x = ToggleParticipantCameraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleParticipantCameraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleParticipantCameraResponse) ProtoMessage() {}

func (x *ToggleParticipantCameraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleParticipantCameraResponse.ProtoReflect.Descriptor instead.
func (*ToggleParticipantCameraResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{31}
}

func (x *ToggleParticipantCameraResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ToggleParticipantMicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *ToggleParticipantMicRequest) Reset() {
	*x = ToggleParticipantMicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleParticipantMicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleParticipantMicRequest) ProtoMessage() {}

func (x *ToggleParticipantMicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleParticipantMicRequest.ProtoReflect.Descriptor instead.
func (*ToggleParticipantMicRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{32}
}

func (x *ToggleParticipantMicRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ToggleParticipantMicRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type ToggleParticipantMicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ToggleParticipantMicResponse) Reset() {
	*x = ToggleParticipantMicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleParticipantMicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleParticipantMicResponse) ProtoMessage() {}

func (x *ToggleParticipantMicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleParticipantMicResponse.ProtoReflect.Descriptor instead.
func (*ToggleParticipantMicResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{33}
}

func (x *ToggleParticipantMicResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type LeavePrivateConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *LeavePrivateConferenceRequest) Reset() {
	*x = LeavePrivateConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeavePrivateConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePrivateConferenceRequest) ProtoMessage() {}

func (x *LeavePrivateConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePrivateConferenceRequest.ProtoReflect.Descriptor instead.
func (*LeavePrivateConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{34}
}

func (x *LeavePrivateConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LeavePrivateConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type LeavePrivateConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LeavePrivateConferenceResponse) Reset() {
	*x = LeavePrivateConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeavePrivateConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePrivateConferenceResponse) ProtoMessage() {}

func (x *LeavePrivateConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePrivateConferenceResponse.ProtoReflect.Descriptor instead.
func (*LeavePrivateConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{35}
}

func (x *LeavePrivateConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type LeaveGroupConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *LeaveGroupConferenceRequest) Reset() {
	*x = LeaveGroupConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGroupConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupConferenceRequest) ProtoMessage() {}

func (x *LeaveGroupConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupConferenceRequest.ProtoReflect.Descriptor instead.
func (*LeaveGroupConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{36}
}

func (x *LeaveGroupConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LeaveGroupConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type LeaveGroupConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LeaveGroupConferenceResponse) Reset() {
	*x = LeaveGroupConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGroupConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupConferenceResponse) ProtoMessage() {}

func (x *LeaveGroupConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupConferenceResponse.ProtoReflect.Descriptor instead.
func (*LeaveGroupConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{37}
}

func (x *LeaveGroupConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type LeavePublicConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *LeavePublicConferenceRequest) Reset() {
	*x = LeavePublicConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeavePublicConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePublicConferenceRequest) ProtoMessage() {}

func (x *LeavePublicConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePublicConferenceRequest.ProtoReflect.Descriptor instead.
func (*LeavePublicConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{38}
}

func (x *LeavePublicConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *LeavePublicConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type LeavePublicConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LeavePublicConferenceResponse) Reset() {
	*x = LeavePublicConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeavePublicConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePublicConferenceResponse) ProtoMessage() {}

func (x *LeavePublicConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePublicConferenceResponse.ProtoReflect.Descriptor instead.
func (*LeavePublicConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{39}
}

func (x *LeavePublicConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type EndPrivateConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *EndPrivateConferenceRequest) Reset() {
	*x = EndPrivateConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPrivateConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPrivateConferenceRequest) ProtoMessage() {}

func (x *EndPrivateConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPrivateConferenceRequest.ProtoReflect.Descriptor instead.
func (*EndPrivateConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{40}
}

func (x *EndPrivateConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *EndPrivateConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type EndPrivateConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EndPrivateConferenceResponse) Reset() {
	*x = EndPrivateConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPrivateConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPrivateConferenceResponse) ProtoMessage() {}

func (x *EndPrivateConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPrivateConferenceResponse.ProtoReflect.Descriptor instead.
func (*EndPrivateConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{41}
}

func (x *EndPrivateConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type EndGroupConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *EndGroupConferenceRequest) Reset() {
	*x = EndGroupConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndGroupConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndGroupConferenceRequest) ProtoMessage() {}

func (x *EndGroupConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndGroupConferenceRequest.ProtoReflect.Descriptor instead.
func (*EndGroupConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{42}
}

func (x *EndGroupConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *EndGroupConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type EndGroupConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EndGroupConferenceResponse) Reset() {
	*x = EndGroupConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndGroupConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndGroupConferenceResponse) ProtoMessage() {}

func (x *EndGroupConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndGroupConferenceResponse.ProtoReflect.Descriptor instead.
func (*EndGroupConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{43}
}

func (x *EndGroupConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type EndPublicConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConferenceID string `protobuf:"bytes,2,opt,name=conferenceID,proto3" json:"conferenceID,omitempty"`
}

func (x *EndPublicConferenceRequest) Reset() {
	*x = EndPublicConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPublicConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPublicConferenceRequest) ProtoMessage() {}

func (x *EndPublicConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPublicConferenceRequest.ProtoReflect.Descriptor instead.
func (*EndPublicConferenceRequest) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{44}
}

func (x *EndPublicConferenceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *EndPublicConferenceRequest) GetConferenceID() string {
	if x != nil {
		return x.ConferenceID
	}
	return ""
}

type EndPublicConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EndPublicConferenceResponse) Reset() {
	*x = EndPublicConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conference_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPublicConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPublicConferenceResponse) ProtoMessage() {}

func (x *EndPublicConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPublicConferenceResponse.ProtoReflect.Descriptor instead.
func (*EndPublicConferenceResponse) Descriptor() ([]byte, []int) {
	return file_conference_proto_rawDescGZIP(), []int{45}
}

func (x *EndPublicConferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_conference_proto protoreflect.FileDescriptor

var file_conference_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x1d,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xed, 0x02, 0x0a, 0x19, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f,
	0x73, 0x22, 0x58, 0x0a, 0x1a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x87, 0x02, 0x0a, 0x1d,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5c, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x22, 0x9f, 0x02, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5a, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x22, 0xa2, 0x02, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5b, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x22, 0x5a, 0x0a, 0x1c, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22,
	0x37, 0x0a, 0x1d, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x72, 0x0a, 0x1a, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x1b,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x59, 0x0a, 0x1b, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x36,
	0x0a, 0x1c, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6a, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x22, 0x2f, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x53, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x6c,
	0x69, 0x6e, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x1f, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x3a, 0x0a, 0x20, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x22, 0x38, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x1e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x39, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x14, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4e, 0x0a, 0x10, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x2b, 0x0a, 0x11, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x5c, 0x0a, 0x1e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44,
	0x22, 0x39, 0x0a, 0x1f, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x59, 0x0a, 0x1b, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x4d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x1c, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4d, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5b,
	0x0a, 0x1d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x1e, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x59, 0x0a, 0x1b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44,
	0x22, 0x36, 0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x22, 0x37, 0x0a, 0x1d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x59, 0x0a,
	0x1b, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x1c, 0x45, 0x6e, 0x64, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x57, 0x0a, 0x19, 0x45, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x1a, 0x45, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x58, 0x0a, 0x1a, 0x45, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x1b, 0x45, 0x6e, 0x64,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0xea, 0x12, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x13,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x71, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6e, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6e, 0x0a, 0x15, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x67, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x14, 0x4a, 0x6f, 0x69,
	0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x16, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x14,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x15, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x18, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x14, 0x45,
	0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x12, 0x45, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x13, 0x45, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x09, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d, 0x69, 0x63, 0x12, 0x1c, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x17, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x14, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x4d, 0x69, 0x63, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x4d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x10, 0x5a,
	0x0e, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conference_proto_rawDescOnce sync.Once
	file_conference_proto_rawDescData = file_conference_proto_rawDesc
)

func file_conference_proto_rawDescGZIP() []byte {
	file_conference_proto_rawDescOnce.Do(func() {
		file_conference_proto_rawDescData = protoimpl.X.CompressGZIP(file_conference_proto_rawDescData)
	})
	return file_conference_proto_rawDescData
}

var file_conference_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_conference_proto_goTypes = []interface{}{
	(*Request)(nil),                          // 0: conference.Request
	(*Response)(nil),                         // 1: conference.Response
	(*ScheduleConferenceRequest)(nil),        // 2: conference.ScheduleConferenceRequest
	(*ScheduleConferenceResponse)(nil),       // 3: conference.ScheduleConferenceResponse
	(*StartPrivateConferenceRequest)(nil),    // 4: conference.StartPrivateConferenceRequest
	(*StartPrivateConferenceResponse)(nil),   // 5: conference.StartPrivateConferenceResponse
	(*StartGroupConferenceRequest)(nil),      // 6: conference.StartGroupConferenceRequest
	(*StartGroupConferenceResponse)(nil),     // 7: conference.StartGroupConferenceResponse
	(*StartPublicConferenceRequest)(nil),     // 8: conference.StartPublicConferenceRequest
	(*StartPublicConferenceResponse)(nil),    // 9: conference.StartPublicConferenceResponse
	(*JoinPrivateConferenceRequest)(nil),     // 10: conference.JoinPrivateConferenceRequest
	(*JoinPrivateConferenceResponse)(nil),    // 11: conference.JoinPrivateConferenceResponse
	(*JoinGroupConferenceRequest)(nil),       // 12: conference.JoinGroupConferenceRequest
	(*JoinGroupConferenceResponse)(nil),      // 13: conference.JoinGroupConferenceResponse
	(*JoinPublicConferenceRequest)(nil),      // 14: conference.JoinPublicConferenceRequest
	(*JoinPublicConferenceResponse)(nil),     // 15: conference.JoinPublicConferenceResponse
	(*AcceptJoiningRequest)(nil),             // 16: conference.AcceptJoiningRequest
	(*AcceptJoiningResponse)(nil),            // 17: conference.AcceptJoiningResponse
	(*DeclineJoiningRequest)(nil),            // 18: conference.DeclineJoiningRequest
	(*DeclineJoiningResponse)(nil),           // 19: conference.DeclineJoiningResponse
	(*RemovePrivateParticipantRequest)(nil),  // 20: conference.RemovePrivateParticipantRequest
	(*RemovePrivateParticipantResponse)(nil), // 21: conference.RemovePrivateParticipantResponse
	(*RemoveGroupParticipantRequest)(nil),    // 22: conference.RemoveGroupParticipantRequest
	(*RemoveGroupParticipantResponse)(nil),   // 23: conference.RemoveGroupParticipantResponse
	(*RemovePublicParticipantRequest)(nil),   // 24: conference.RemovePublicParticipantRequest
	(*RemovePublicParticipantResponse)(nil),  // 25: conference.RemovePublicParticipantResponse
	(*ToggleCameraRequest)(nil),              // 26: conference.ToggleCameraRequest
	(*ToggleCameraResponse)(nil),             // 27: conference.ToggleCameraResponse
	(*ToggleMicRequest)(nil),                 // 28: conference.ToggleMicRequest
	(*ToggleMicResponse)(nil),                // 29: conference.ToggleMicResponse
	(*ToggleParticipantCameraRequest)(nil),   // 30: conference.ToggleParticipantCameraRequest
	(*ToggleParticipantCameraResponse)(nil),  // 31: conference.ToggleParticipantCameraResponse
	(*ToggleParticipantMicRequest)(nil),      // 32: conference.ToggleParticipantMicRequest
	(*ToggleParticipantMicResponse)(nil),     // 33: conference.ToggleParticipantMicResponse
	(*LeavePrivateConferenceRequest)(nil),    // 34: conference.LeavePrivateConferenceRequest
	(*LeavePrivateConferenceResponse)(nil),   // 35: conference.LeavePrivateConferenceResponse
	(*LeaveGroupConferenceRequest)(nil),      // 36: conference.LeaveGroupConferenceRequest
	(*LeaveGroupConferenceResponse)(nil),     // 37: conference.LeaveGroupConferenceResponse
	(*LeavePublicConferenceRequest)(nil),     // 38: conference.LeavePublicConferenceRequest
	(*LeavePublicConferenceResponse)(nil),    // 39: conference.LeavePublicConferenceResponse
	(*EndPrivateConferenceRequest)(nil),      // 40: conference.EndPrivateConferenceRequest
	(*EndPrivateConferenceResponse)(nil),     // 41: conference.EndPrivateConferenceResponse
	(*EndGroupConferenceRequest)(nil),        // 42: conference.EndGroupConferenceRequest
	(*EndGroupConferenceResponse)(nil),       // 43: conference.EndGroupConferenceResponse
	(*EndPublicConferenceRequest)(nil),       // 44: conference.EndPublicConferenceRequest
	(*EndPublicConferenceResponse)(nil),      // 45: conference.EndPublicConferenceResponse
}
var file_conference_proto_depIdxs = []int32{
	0,  // 0: conference.Conference.HealthCheck:input_type -> conference.Request
	2,  // 1: conference.Conference.ScheduleConference:input_type -> conference.ScheduleConferenceRequest
	4,  // 2: conference.Conference.StartPrivateConference:input_type -> conference.StartPrivateConferenceRequest
	6,  // 3: conference.Conference.StartGroupConference:input_type -> conference.StartGroupConferenceRequest
	8,  // 4: conference.Conference.StartPublicConference:input_type -> conference.StartPublicConferenceRequest
	10, // 5: conference.Conference.JoinPrivateConference:input_type -> conference.JoinPrivateConferenceRequest
	12, // 6: conference.Conference.JoinGroupConfernce:input_type -> conference.JoinGroupConferenceRequest
	14, // 7: conference.Conference.JoinPublicConference:input_type -> conference.JoinPublicConferenceRequest
	16, // 8: conference.Conference.AcceptJoining:input_type -> conference.AcceptJoiningRequest
	18, // 9: conference.Conference.DeclineJoining:input_type -> conference.DeclineJoiningRequest
	34, // 10: conference.Conference.LeavePrivateConference:input_type -> conference.LeavePrivateConferenceRequest
	36, // 11: conference.Conference.LeaveGroupConference:input_type -> conference.LeaveGroupConferenceRequest
	38, // 12: conference.Conference.LeavePublicConference:input_type -> conference.LeavePublicConferenceRequest
	20, // 13: conference.Conference.RemovePrivateParticipant:input_type -> conference.RemovePrivateParticipantRequest
	22, // 14: conference.Conference.RemoveGroupParticipant:input_type -> conference.RemoveGroupParticipantRequest
	24, // 15: conference.Conference.RemovePublicParticipant:input_type -> conference.RemovePublicParticipantRequest
	40, // 16: conference.Conference.EndPrivateConference:input_type -> conference.EndPrivateConferenceRequest
	42, // 17: conference.Conference.EndGroupConference:input_type -> conference.EndGroupConferenceRequest
	44, // 18: conference.Conference.EndPublicConference:input_type -> conference.EndPublicConferenceRequest
	26, // 19: conference.Conference.ToggleCamera:input_type -> conference.ToggleCameraRequest
	28, // 20: conference.Conference.ToggleMic:input_type -> conference.ToggleMicRequest
	30, // 21: conference.Conference.ToggleParticipantCamera:input_type -> conference.ToggleParticipantCameraRequest
	32, // 22: conference.Conference.ToggleParticipantMic:input_type -> conference.ToggleParticipantMicRequest
	1,  // 23: conference.Conference.HealthCheck:output_type -> conference.Response
	3,  // 24: conference.Conference.ScheduleConference:output_type -> conference.ScheduleConferenceResponse
	5,  // 25: conference.Conference.StartPrivateConference:output_type -> conference.StartPrivateConferenceResponse
	7,  // 26: conference.Conference.StartGroupConference:output_type -> conference.StartGroupConferenceResponse
	9,  // 27: conference.Conference.StartPublicConference:output_type -> conference.StartPublicConferenceResponse
	11, // 28: conference.Conference.JoinPrivateConference:output_type -> conference.JoinPrivateConferenceResponse
	13, // 29: conference.Conference.JoinGroupConfernce:output_type -> conference.JoinGroupConferenceResponse
	15, // 30: conference.Conference.JoinPublicConference:output_type -> conference.JoinPublicConferenceResponse
	17, // 31: conference.Conference.AcceptJoining:output_type -> conference.AcceptJoiningResponse
	19, // 32: conference.Conference.DeclineJoining:output_type -> conference.DeclineJoiningResponse
	35, // 33: conference.Conference.LeavePrivateConference:output_type -> conference.LeavePrivateConferenceResponse
	37, // 34: conference.Conference.LeaveGroupConference:output_type -> conference.LeaveGroupConferenceResponse
	39, // 35: conference.Conference.LeavePublicConference:output_type -> conference.LeavePublicConferenceResponse
	21, // 36: conference.Conference.RemovePrivateParticipant:output_type -> conference.RemovePrivateParticipantResponse
	23, // 37: conference.Conference.RemoveGroupParticipant:output_type -> conference.RemoveGroupParticipantResponse
	25, // 38: conference.Conference.RemovePublicParticipant:output_type -> conference.RemovePublicParticipantResponse
	41, // 39: conference.Conference.EndPrivateConference:output_type -> conference.EndPrivateConferenceResponse
	43, // 40: conference.Conference.EndGroupConference:output_type -> conference.EndGroupConferenceResponse
	45, // 41: conference.Conference.EndPublicConference:output_type -> conference.EndPublicConferenceResponse
	27, // 42: conference.Conference.ToggleCamera:output_type -> conference.ToggleCameraResponse
	29, // 43: conference.Conference.ToggleMic:output_type -> conference.ToggleMicResponse
	31, // 44: conference.Conference.ToggleParticipantCamera:output_type -> conference.ToggleParticipantCameraResponse
	33, // 45: conference.Conference.ToggleParticipantMic:output_type -> conference.ToggleParticipantMicResponse
	23, // [23:46] is the sub-list for method output_type
	0,  // [0:23] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_conference_proto_init() }
func file_conference_proto_init() {
	if File_conference_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conference_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPrivateConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPrivateConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGroupConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGroupConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPublicConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPublicConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPrivateConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPrivateConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPublicConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPublicConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptJoiningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptJoiningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineJoiningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineJoiningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePrivateParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePrivateParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePublicParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePublicParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleCameraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleMicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleMicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleParticipantCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleParticipantCameraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleParticipantMicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleParticipantMicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeavePrivateConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeavePrivateConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGroupConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGroupConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeavePublicConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeavePublicConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPrivateConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPrivateConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndGroupConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndGroupConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPublicConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conference_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPublicConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conference_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_conference_proto_goTypes,
		DependencyIndexes: file_conference_proto_depIdxs,
		MessageInfos:      file_conference_proto_msgTypes,
	}.Build()
	File_conference_proto = out.File
	file_conference_proto_rawDesc = nil
	file_conference_proto_goTypes = nil
	file_conference_proto_depIdxs = nil
}
